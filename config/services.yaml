# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    token.ttl: '%env(REFRESH_TTL)%'
    GITHUB_CLIENT_ID: '%env(GITHUB_CLIENT_ID)%'
    GITHUB_CLIENT_SECRET: '%env(GITHUB_CLIENT_SECRET)%'

services:

    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\ApiResource\ActiveOnlyExtension:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }

    App\ApiResource\GetEntityCommentExtension:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }

    App\ApiResource\AuthOpenApiFactory:
        decorates: 'api_platform.openapi.factory'
        arguments: [ '@App\ApiResource\AuthOpenApiFactory.inner' ]
        autoconfigure: false

    'App\ApiResource\TimestampNormalizer':
        decorates: 'api_platform.jsonld.normalizer.item'
        arguments:
            $decorated: '@App\ApiResource\TimestampNormalizer.inner'

    App\State\IsLikedProvider:
        bind:
            $itemProvider: '@api_platform.doctrine.orm.state.item_provider'
            $collectionProvider: '@api_platform.doctrine.orm.state.collection_provider'

    App\Service\AwsS3Service:
        arguments:
            $AWS_ACCESS_KEY_ID: '%env(AWS_ACCESS_KEY_ID)%'
            $AWS_SECRET_ACCESS_KEY: '%env(AWS_SECRET_ACCESS_KEY)%'
            $AWS_DEFAULT_REGION: '%env(AWS_DEFAULT_REGION)%'
            $AWS_BUCKET: '%env(AWS_BUCKET)%'
    App\Service\MailerService:
        arguments:
            $SENDER: '%env(SENDER)%'
    App\EventSubscriber\ChallengeRegisterListener:
        autoconfigure: true
        autowire: true
        tags:
            - { name: kernel.event_subscriber,event: kernel.VIEW, priority: 1 }

    comments.from:
        parent: 'api_platform.doctrine.orm.numeric_filter'
        arguments: [ { parent.id: ~ } ]
        tags: [ 'api_platform.filter' ]
        autowire: false
        autoconfigure: false
        public: false

    comments.sort:
        parent: 'api_platform.doctrine.orm.order_filter'
        arguments: [ { createdAt: ~ } ]
        tags: [ 'api_platform.filter' ]
        autowire: false
        autoconfigure: false
        public: false

